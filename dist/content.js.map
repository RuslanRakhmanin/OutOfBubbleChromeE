{"version":3,"file":"content.js","mappings":"yBAEA,IAAIA,EAAuB,CACzBC,SAAS,EACTC,aAAc,GACdC,UAAW,IAIb,SAASC,EAAmBC,EAAsBC,GAChD,MAAMC,EAAQC,SAASC,SACrB,yBAAyBJ,OACzBG,SAASE,KACT,KACAC,YAAYC,6BACZ,MAGF,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAMO,eAAgBD,IAAK,CAC7C,MAAME,EAAOR,EAAMS,aAAaH,GAC1BI,EAASF,EAAKG,WAEdC,GADOJ,EAAKK,aAAe,IACdC,MAAM,IAAIC,OAAO,IAAIjB,KAAiB,OAEnDkB,EAAWf,SAASgB,yBAC1BL,EAAMM,SAAQC,IACZ,GAAIA,EAAKC,gBAAkBtB,EAAasB,cAAe,CACrD,MAAMC,EAAOpB,SAASqB,cAAc,QACpCD,EAAKE,UAAUC,IAAI,aACnBH,EAAKI,MAAMC,gBAAkB,SAC7BL,EAAKI,MAAME,OAAS,OACpBN,EAAKI,MAAMG,SAAW,WACtBP,EAAKR,YAAcM,EAEnB,MAAMU,EAAgB5B,SAASqB,cAAc,QAC7CO,EAAcN,UAAUC,IAAI,cAC5BK,EAAcJ,MAAMK,WAAa,SACjCD,EAAcJ,MAAMM,MAAQ,QAC5BF,EAAcJ,MAAMC,gBAAkB,OACtCG,EAAcJ,MAAMO,MAAQ,OAC5BH,EAAcJ,MAAMQ,UAAY,SAChCJ,EAAcJ,MAAMS,aAAe,MACnCL,EAAcJ,MAAMU,QAAU,MAC9BN,EAAcJ,MAAMG,SAAW,WAC/BC,EAAcJ,MAAMW,OAAS,OAC7BP,EAAcJ,MAAMY,OAAS,OAC7BR,EAAcJ,MAAMa,KAAO,MAC3BT,EAAcJ,MAAMc,UAAY,mBAChCV,EAAcJ,MAAMe,QAAU,IAC9BX,EAAcJ,MAAMgB,WAAa,eACjCZ,EAAchB,YAAcd,EAE5BsB,EAAKqB,YAAYb,GAGjBR,EAAKsB,iBAAiB,cAAc,KAClCd,EAAcJ,MAAMK,WAAa,UACjCD,EAAcJ,MAAMe,QAAU,GAAG,IAGnCnB,EAAKsB,iBAAiB,cAAc,KAClCd,EAAcJ,MAAMK,WAAa,SACjCD,EAAcJ,MAAMe,QAAU,GAAG,IAGnCxB,EAAS0B,YAAYrB,EACvB,MACEL,EAAS0B,YAAYzC,SAAS2C,eAAezB,GAC/C,IAGFT,EAAOmC,aAAa7B,EAAUR,EAChC,CAGA,MAAMiB,EAAQxB,SAASqB,cAAc,SACrCG,EAAMZ,YAAc,yeAuBpBZ,SAAS6C,KAAKJ,YAAYjB,EAC5B,CAQAsB,OAAOC,QAAQC,UAAUC,aAAY,CAACC,EAASC,EAAQC,KACrD,MAAMC,EAAUH,EAChB,QAAwBI,IAApBD,EAAQ5D,UAEVD,EAAOC,QAAU4D,EAAQ5D,QACpBD,EAAOC,SAAU,CACpB,GACO,qBADC4D,EAAQE,KACd,CACE,IAAIC,EAAoBH,EAAQI,KAChC,IAAK,IAAIC,KAAUF,EACjB5D,EAAmB8D,EAAOC,KAAMD,EAAOE,KAAO,KAAOF,EAAOG,OAEzD,MAELC,QAAQC,KAAK,uBAAwBV,EAAQE,MAGjDH,OAAaE,EACf,CASFF,EAJ8B,CAC5BY,MAAOhE,SAASgE,MAChBC,IAAKC,OAAOC,SAASC,MAED,G","sources":["webpack://out-of-bubble/./src/content.ts"],"sourcesContent":["import { Message, StoredConfig, TabResponse, Tactic} from \"./common\"\n\nlet config: StoredConfig = {\n  enabled: true,\n  excludeHosts: [],\n  whiteList: [],\n}\n\n// Search the document for the text to search and highlight it if found.\nfunction searchAndHighlight(textToSearch: string, popup_text: string) {\n  const nodes = document.evaluate(\n    `//text()[contains(., \"${textToSearch}\")]`,\n    document.body,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n\n  for (let i = 0; i < nodes.snapshotLength; i++) {\n    const node = nodes.snapshotItem(i) as Text;\n    const parent = node.parentNode as HTMLElement;\n    const text = node.textContent || \"\";\n    const parts = text.split(new RegExp(`(${textToSearch})`, 'gi'));\n\n    const fragment = document.createDocumentFragment();\n    parts.forEach(part => {\n      if (part.toLowerCase() === textToSearch.toLowerCase()) {\n        const span = document.createElement(\"span\");\n        span.classList.add(\"highlight\");\n        span.style.backgroundColor = \"yellow\";\n        span.style.cursor = \"help\";\n        span.style.position = \"relative\";\n        span.textContent = part;\n\n        const spanPopupInfo = document.createElement(\"span\");\n        spanPopupInfo.classList.add(\"popup-info\");\n        spanPopupInfo.style.visibility = \"hidden\";\n        spanPopupInfo.style.width = \"200px\";\n        spanPopupInfo.style.backgroundColor = \"#555\";\n        spanPopupInfo.style.color = \"#fff\";\n        spanPopupInfo.style.textAlign = \"center\";\n        spanPopupInfo.style.borderRadius = \"6px\";\n        spanPopupInfo.style.padding = \"5px\";\n        spanPopupInfo.style.position = \"absolute\";\n        spanPopupInfo.style.zIndex = \"9999\";\n        spanPopupInfo.style.bottom = \"100%\";\n        spanPopupInfo.style.left = \"50%\";\n        spanPopupInfo.style.transform = \"translateX(-50%)\";\n        spanPopupInfo.style.opacity = \"0\";\n        spanPopupInfo.style.transition = \"opacity 0.3s\";    \n        spanPopupInfo.textContent = popup_text;\n\n        span.appendChild(spanPopupInfo);\n\n        // Add event listeners for showing/hiding the popup\n        span.addEventListener('mouseenter', () => {\n          spanPopupInfo.style.visibility = 'visible';\n          spanPopupInfo.style.opacity = '1';\n        });\n\n        span.addEventListener('mouseleave', () => {\n          spanPopupInfo.style.visibility = 'hidden';\n          spanPopupInfo.style.opacity = '0';\n        });\n\n        fragment.appendChild(span);\n      } else {\n        fragment.appendChild(document.createTextNode(part));\n      }\n    });\n\n    parent.replaceChild(fragment, node);\n  }\n\n  // Add a style tag with the necessary CSS\n  const style = document.createElement('style');\n  style.textContent = `\n    .highlight {\n      position: relative;\n      background-color: yellow;\n      cursor: help;\n    }\n    .popup-info {\n      visibility: hidden;\n      width: 200px;\n      background-color: #555;\n      color: #fff;\n      text-align: center;\n      border-radius: 6px;\n      padding: 5px;\n      position: absolute;\n      z-index: 9999;\n      bottom: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      opacity: 0;\n      transition: opacity 0.3s;\n    }\n  `;\n  document.head.appendChild(style);\n}\n\n\n// let textToSearch = \"The epidemic of violence against women cannot go on.\"\n// searchAndHighlight(textToSearch);\n\n\n// Listen for messages from popup and service worker.\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  const message = request as Message\n  if (message.enabled !== undefined) {\n    // console.log(\"Received message from sender %s\", sender.id, request)\n    config.enabled = message.enabled\n    if ( config.enabled ) {\n      switch (message.type) {\n        case \"highlightTactics\":\n          let tactics: Tactic[] = message.data\n          for (let tactic of tactics) {\n            searchAndHighlight(tactic.text, tactic.name + \": \" + tactic.reason)\n          }\n          break\n        default:\n          console.warn(\"Unknown message type\", message.type)\n          break  \n      }      \n      sendResponse(undefined)\n    } else {\n      // console.log(\"Disabled\")\n    }\n  }\n\n  const response: TabResponse = {\n    title: document.title,\n    url: window.location.href,\n  }\n  sendResponse(response)\n})\n"],"names":["config","enabled","excludeHosts","whiteList","searchAndHighlight","textToSearch","popup_text","nodes","document","evaluate","body","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","i","snapshotLength","node","snapshotItem","parent","parentNode","parts","textContent","split","RegExp","fragment","createDocumentFragment","forEach","part","toLowerCase","span","createElement","classList","add","style","backgroundColor","cursor","position","spanPopupInfo","visibility","width","color","textAlign","borderRadius","padding","zIndex","bottom","left","transform","opacity","transition","appendChild","addEventListener","createTextNode","replaceChild","head","chrome","runtime","onMessage","addListener","request","sender","sendResponse","message","undefined","type","tactics","data","tactic","text","name","reason","console","warn","title","url","window","location","href"],"sourceRoot":""}